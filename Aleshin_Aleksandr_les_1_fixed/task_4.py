"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""


def identification(self):  # O(1)
    for key, val in users.items():  # O(n)
        if val[1] == 0:  # O(1)
            aut = input(f'{key}, желаете авторизоваться? (y/n)')  # O(1)
            if aut == 'n':  # O(1)
                print(f'Очень жаль {key}')  # O(1)
            else:
                val[1] = 1  # O(1)
                print(f'{key}, вы авторизовались!')  # O(1)
        else:
            print(f'{key}, вы авторизованы!)')  # O(1)


def identification_aut(self):  # O(n2)
    for val in users.values():  # O(n)
        for i in range(1, len(val), 1):  # O(n)
            if val[i] == 0:  # O(1)
                aut = input('вы не авторизованы, желаете авторизоваться? (y/n)')  # O(1)
                if aut == 'n':  # O(1)
                    print('вы не авторизованы')  # O(1)
                else:
                    val[i] = 1  # O(1)
                    print('вы авторизовались')  # O(1)
            else:
                print('вы авторизованы')  # O(1)


users = {'fox': [123456, 1],
         'mixa': [123456, 0],
         'gura': [654123, 0],
         'grrrrr': [52486, 1]}  # 1-авторизация выполнена, 0-не авторизован

identification(users)
identification_aut(users)